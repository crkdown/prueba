import Head from "next/head";
import { useDropzone, FileWithPath } from "react-dropzone";
import { useEffect, useMemo, useState } from "react";
import Image from "next/image";
import { useS3Upload, getImageData } from "next-s3-upload";

const baseStyle = {
  flex: 1,
  display: "flex",
  flexDirection: "column",
  padding: "20px",
  borderWidth: 2,
  borderRadius: 2,
  borderColor: "#eeeeee",
  borderStyle: "dashed",
  backgroundColor: "#fafafa",
  color: "#bdbdbd",
  outline: "none",
  transition: "border .24s ease-in-out",
};

const focusedStyle = {
  borderColor: "#2196f3",
};

const acceptStyle = {
  borderColor: "#00e676",
};

const rejectStyle = {
  borderColor: "#ff1744",
};

type CustomFile = FileWithPath & {
  preview: string;
};

export default function Home() {
  const [localFile, setLocalFile] = useState<CustomFile>();
  const [s3FileUrl, setS3FileUrl] = useState<string>();

  const [setImageDimensions, imageDimensions] = useState<{
    width: number;
    height: number;
  }>();

  let { uploadToS3 } = useS3Upload();
  const {
    getRootProps,
    getInputProps,
    acceptedFiles,
    isFocused,
    isDragAccept,
    isDragReject,
  } = useDropzone({
    accept: { "image/*": [] },
    maxFiles: 1,
    onDrop: async (acceptedFiles) => {
      setLocalFile(
        Object.assign(acceptedFiles[0], {
          preview: URL.createObjectURL(acceptedFiles[0]),
        })
      );

      let { url } = await uploadToS3(acceptedFiles[0]);
      setS3FileUrl(url);
      // let { height, width } = await getImageData(file);
      console.log("S3 URL", url);
    },
  });

  const style = useMemo(
    () => ({
      ...baseStyle,
      ...(isFocused ? focusedStyle : {}),
      ...(isDragAccept ? acceptStyle : {}),
      ...(isDragReject ? rejectStyle : {}),
    }),
    [isFocused, isDragAccept, isDragReject]
  );

  useEffect(() => {
    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount
    return () => localFile && URL.revokeObjectURL(localFile.preview);
  }, []);

  return (
    <>
      <Head>
        <title>Bg Removal App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="mt-12 border-zinc-800 border-b pb-6">
        <h1 className="text-5xl">Try for free!</h1>
        <p className="text-zinc-500 pt-2">
          Remove the background from up to 10 images, no charge.
        </p>
      </div>
      <div className="flex my-12 gap-12">
        <div className="flex-1">
          <h1 className="text-xl mb-5">Upload</h1>
          {localFile && (
            <Image
              alt="uploaded photo"
              src={localFile.preview}
              className="rounded-2xl relative sm:mt-0 mt-2 cursor-zoom-in mb-4"
              width={475}
              height={475}
            />
          )}
          <div {...getRootProps({ style: style as React.CSSProperties })}>
            <input {...getInputProps()} />
            <p>Drop a image, or click to select one</p>
          </div>
          {localFile && (
            <p className="mt-2">
              {localFile.path} - {localFile.size} bytes
            </p>
          )}
        </div>
        <div className="flex-1">
          <h1 className="text-xl mb-5">Result</h1>
          {s3FileUrl && (
            <Image
              src={s3FileUrl}
              width={475}
              height={475}
              alt="photo with bg removed"
              className="rounded-2xl relative sm:mt-0 mt-2 cursor-zoom-in mb-4"
            />
          )}
        </div>
      </div>
    </>
  );
}
